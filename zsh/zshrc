zmodload zsh/zprof

# PATH ===

export PATH="/bin:/usr/local/bin:/usr/local/sbin:/Users/xavier.guardiola/scripts:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/texbin:/usr/local/sbin:/Users/xavier.guardiola/scripts"
# added latex stuff
export PATH="$PATH:/Library/TeX/texbin"
# PATH: scripts
export PATH=/Users/Xavier.Guardiola/scripts:$PATH
# PATH: homebrew packages
homebrew=/opt/homebrew/bin/
export PATH=$homebrew:$PATH
export PATH=/Users/xavier.guardiola/.local/bin:$PATH
# current folder
export PATH="$PATH:."

# You may need to manually set your language environment
# export LC_ALL=en_US.UTF-8
# export LANG=en_US.UTF-8

# for tmux to find gpg
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# # Disable globbing on the remote path.
alias scp='noglob scp_wrap'
function scp_wrap {
  local -a args
  local i
  for i in "$@"; do case $i in
    (*:*) args+=($i) ;;
    (*) args+=(${~i}) ;;
  esac; done
  command scp "${(@)args}"
}

# Howtos folder
export PARA_FOLDER=~/Dropbox/PARA/
# Notes folder location
export NOTES_FOLDER="$HOME/notes"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/xavier.guardiola/Downloads/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/xavier.guardiola/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/xavier.guardiola/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/xavier.guardiola/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# Always vi!
export EDITOR=vim

# GNUPG
GPG_TTY=`tty`
export GPG_TTY

# Aliases ===

# vi
alias vi="vim"
alias vim="nvim"

# tmuxinator
alias tx=tmuxinator

# Ranger
alias r=". ranger"

# Better ls
alias ls="eza"
alias ll="eza -l"
alias la="eza --all"

# Lazygit
alias lg="lazygit"

# Run compinit again to pick up non OMZ completion scripts
# https://github.com/zsh-users/zsh-completions/issues/277
# compinit

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/xavier.guardiola/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/xavier.guardiola/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/xavier.guardiola/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/xavier.guardiola/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Starship
eval "$(starship init zsh)"

# Activate syntax highlighting
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# # Disable underline
(( ${+ZSH_HIGHLIGHT_STYLES} )) || typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[path]=none
ZSH_HIGHLIGHT_STYLES[path_prefix]=none

# Activate autosuggestions
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh


